#! /usr/bin/env bash

# GITHUB_HEADER="https://github.com/"
GITHUB_HEADER="git@github.com:"

ClashConf=$HOME/.config/mihomo/
UiFileDownload="git clone -b gh-pages "${GITHUB_HEADER}"MetaCubeX/metacubexd.git $ClashConf/dashboard"

red=$'\e[31m'
cyan=$'\e[36m'
x=$'\e[0m'

main() {
  install_external_ui

  case "$1" in
    h) help ;;
    l) check_config ;;
    r) reload ;;
    m) move_config "$2" "$3" ;;
    *) download_config "$1" "$2" "$3" ;;
  esac
}


install_external_ui() {
  if [[ ! -d "${ClashConf}/dashboard" ]]; then
    printf "running %s%s%s installing the dashboard.\n" "$cyan" "$UiFileDownload" "$x"
    $UiFileDownload || { printf "%sinstall dashboard failed%s" "$red" "$x" && exit 1; }
  fi
}

help() {
  echo -e "Usage:"
  echo -e "\t"$(basename $0) "h"
  echo -e "\t"$(basename $0) "l"
  echo -e "\t"$(basename $0) "r"
  echo -e "\t"$(basename $0) "m {src} {dst}"
  echo -e "\t"$(basename $0) "{url} {ofilename:nodes_config} {external_ui_ip:127.0.0.1:9090}"
}

check_config() {
  ls --color=always -l "${ClashConf}/config.yaml"
}

reload() {
  selected=$(find "$ClashConf" -type f \( -name '*.yml' -or -name '*.yaml' \) | fzf)
  if [[ -z "$selected" ]]; then
    echo "INFO: No file selected, then do nothing!!!"
    exit 1;
  fi
  ln -sf "$selected" "${ClashConf}/config.yaml"
  check_config # NOTE: local
  restart # NOTE: local
}

move_config() {
  if [[ -z "$1" ]] || [[ -z "$2" ]]; then
    echo $(basename $0) "m ${red}src dst${x}"
    exit 1;
  fi
  mv "$1" "${ClashConf}$2"
}

download_config() {
  url=${1:-"https://bulink.me/sub/psjet/cl"}
  name=${2:-"nodes_config"}
  external_ui_ip=${3:-"127.0.0.1:9090"}
  ext=".yaml"

  temp_filepath="$ClashConf/${name}_new${ext}"

  wget -q "$url" -O "$temp_filepath"

  if ! grep -q '^external-ui:' "$temp_filepath"; then
    sed -i -e "s@\(^external-controller:\).*@\1 $external_ui_ip\nexternal-ui: $ClashConf/dashboard@g" "$temp_filepath"
  fi

  if ! clash-meta -t -f "$temp_filepath" > /dev/null 2>&1; then
    rm "$temp_filepath"
    printf "%sERROR: The new config file has an error, then do nothing.%s\n" "$red" "$x"
    exit
  fi

  mv -f "$temp_filepath" "${ClashConf}/${name}${ext}"
  ln -sf "${ClashConf}/${name}${ext}" "${ClashConf}/config.yaml"

  restart # NOTE: local
}

restart() {
  if systemctl --user list-unit-files clash-meta.service > /dev/null; then
    systemctl --user restart clash-meta.service
    systemctl --user status clash-meta.service
  else
    echo "Proxy file update succeeded!!!"
  fi
}

# `$*`: make all parameters to one argument
# `$@`: seperate all parameters as it is what it is
main "$@"
